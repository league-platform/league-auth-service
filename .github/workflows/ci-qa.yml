name: CI QA â€“ league-auth-service

on:
  push:
    branches: [ qa ]

jobs:
  provision-infra:
    runs-on: ubuntu-latest
    environment: qa

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Create SG for Auth Service
        run: |
          # Create a new security group and capture its ID
          SG_ID=$(aws ec2 create-security-group \
            --description "QA Auth Service SG" \
            --group-name qa-auth-sg \
            --vpc-id ${{ secrets.VPC_ID }} \
            --query 'GroupId' --output text)
          echo "SG_ID=$SG_ID" >> $GITHUB_ENV

          # Allow inbound on port 3000 from anywhere
          aws ec2 authorize-security-group-ingress \
            --group-id $SG_ID \
            --protocol tcp --port 3000 --cidr 0.0.0.0/0

      - name: Launch Auth EC2
        run: |
          # Launch instance in the correct subnet, with the SG_ID
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ${{ secrets.AMI_ID }} \
            --instance-type ${{ secrets.INSTANCE_TYPE }} \
            --key-name ${{ secrets.SSH_KEY_NAME }} \
            --subnet-id ${{ secrets.SUBNET_ID }} \
            --security-group-ids $SG_ID \
            --associate-public-ip-address \
            --query 'Instances[0].InstanceId' \
            --output text)
          echo "AUTH_INSTANCE=$INSTANCE_ID" >> $GITHUB_ENV

      - name: Wait for instance running
        run: aws ec2 wait instance-running --instance-ids ${{ env.AUTH_INSTANCE }}

      - name: Associate Elastic IP
        run: |
          # If you have an existing EIP allocation, associate it here
          aws ec2 associate-address \
            --allocation-id ${{ secrets.EIP_ALLOCATION_ID }} \
            --instance-id ${{ env.AUTH_INSTANCE }}

      - name: Get public IP
        run: |
          IP=$(aws ec2 describe-instances \
            --instance-ids ${{ env.AUTH_INSTANCE }} \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)
          echo "AUTH_IP=$IP" >> $GITHUB_ENV
