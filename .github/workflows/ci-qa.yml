name: CI QA – league-auth-service

on:
  push:
    branches: [qa]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: qa

    steps:
      # Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configure SSH access to EC2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh

          # Write the SSH key line-by-line using safe expansion
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "✅ SSH key written successfully"

      # Deploy the app to EC2 and start the microservice using PM2
      - name: Deploy to EC2 and start microservice
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            cd /home/${{ secrets.EC2_USER }}

            # Clone or update the repository
            if [ -d league-auth-service ]; then
              cd league-auth-service
              git pull
            else
              git clone https://github.com/league-platform/league-auth-service.git
              cd league-auth-service
            fi

            # Create .env file with secrets
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "PORT=3000" >> .env

            # Install Node.js if not available
            if ! command -v node &> /dev/null; then
              curl -sL https://rpm.nodesource.com/setup_18.x | bash -
              yum install -y nodejs
            fi

            # Install project dependencies
            npm install

            # Install PM2 and start the service
            npm install -g pm2
            pm2 start index.js --name auth-service || pm2 restart auth-service
            pm2 save
            pm2 startup | tail -n 1 | bash
          EOF
